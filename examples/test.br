// main.br

trait Error {
  fn error () -> String;
}

struct FooError {
  fn error () -> String {
    return "Error: Foo";
  }
}

struct CustomError {
  message: String;

  static fn new(message: String) -> Self {
    return Self { 
      message: message,
    };
  }

  fn error () -> String {
    return "Error: " + kind;
  }
}

fn main () {

  const err1 = CustomError::new("Something went wrong");
  const err2 = FooError{};

  const errors = []Error{ err1, err2 };
  
  const e1 = errors[0];
  const e2 = errors[1];
}